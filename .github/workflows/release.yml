name: Release

on:
  push:
    branches: [ main ]
    paths:
      - 'Cargo.toml'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Cargo.toml to check version
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.IOS_GITHUB_TOKEN }}
          sparse-checkout: |
            Cargo.toml
          sparse-checkout-cone-mode: false
      - name: Get rusaint version
        id: current_version
        uses: mikefarah/yq@v4
        with:
          cmd: yq '.workspace.package.version | "v" + .' Cargo.toml
      - name: Fetch latest release tag
        id: latest_release
        run: |
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.IOS_GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/EATSTEAK/rusaint/releases \
            | jq '.[0].tag_name | "result=" + .' \
            | tr -d '"' >> $GITHUB_OUTPUT
      - name: Cancel workflow if version is not updated
        if: steps.current_version.outputs.result == steps.latest_release.outputs.result
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run cancel ${{ github.run_id }}
          gh run watch ${{ github.run_id }}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: 'armv7-linux-androideabi, i686-linux-android, aarch64-linux-android, x86_64-linux-android'
      - name: Retrieve cache
        uses: Leafwing-Studios/cargo-cache@v2
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 23
          distribution: temurin
          cache: gradle
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r27c
          link-to-sdk: true
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build with Gradle
        run: |
          cd ./languages/kotlin
          chmod +x ./gradlew
          ./gradlew build
      - name: Publish
        run: cargo publish --package rusaint --verbose --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
      - name: Publish to local Maven repository
        run: |
          cd ./languages/kotlin
          ./gradlew publish
      - name: Release with JReleaser
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.MAVENCENTRAL_USERNAME }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.MAVENCENTRAL_PASSWORD }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
        run: |
          cd ./languages/kotlin
          ./gradlew jreleaserRelease
      - name: Publish with JReleaser
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.MAVENCENTRAL_USERNAME }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.MAVENCENTRAL_PASSWORD }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
        run: |
          cd ./languages/kotlin
          ./gradlew jreleaserPublish
      - name: JReleaser release output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jreleaser-release
          path: |
            ./languages/kotlin/lib/build/jreleaser/trace.log
            ./languages/kotlin/lib/build/jreleaser/output.properties
