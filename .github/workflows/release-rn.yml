name: Release (React Native)

on:
  workflow_run:
    workflows: ["Release"]
    types: [completed]
    branches:
      - main
  workflow_dispatch:
permissions:
  actions: write
  id-token: write
jobs:
  build-rn:
    runs-on: macos-latest
    outputs:
      current_version: ${{ steps.current_version.outputs.result }}
    steps:
      - name: Checkout Cargo.toml to check version
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            Cargo.toml
          sparse-checkout-cone-mode: false
      - name: Get rusaint version
        id: current_version
        run: yq '.workspace.package.version | "result=v" + .' Cargo.toml >> $GITHUB_OUTPUT
      - name: Fetch latest npm release
        id: latest_release
        run: |
          curl -L \
            -H "Accept: application/json" \
            https://registry.npmjs.org/@rusaint%2freact-native \
            | jq '."dist-tags"."latest" | "result=" + .' \
            | tr -d '"' >> $GITHUB_OUTPUT
      - name: Cancel workflow if version is not updated
        if: steps.current_version.outputs.result == steps.latest_release.outputs.result
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run cancel ${{ github.run_id }}
          gh run watch ${{ github.run_id }}
      - name: Clear directory
        run: |
          rm -rf ./*
          rm -rf ./.git
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "aarch64-apple-ios, x86_64-apple-ios, aarch64-apple-ios-sim, armv7-linux-androideabi, i686-linux-android, aarch64-linux-android, x86_64-linux-android"
      - name: Retrieve cache
        uses: Leafwing-Studios/cargo-cache@v2

      ## iOS Setup
      - name: Install the Apple certificate
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.IOS_BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.IOS_P12_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          KEYCHAIN_PATH=$RUNNER_TEMP/signing.keychain-db

          # import certificate from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
      ## Android Setup
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: gradle
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r27c
          link-to-sdk: true
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Install cargo-ndk
        run: cargo install cargo-ndk
      ## Node.js Setup
      - name: Enable Corepack
        run: corepack enable
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache-dependency-path: languages/react-native/yarn.lock
          scope: "@rusaint"
          registry-url: https://registry.npmjs.org
      - name: Install dependencies
        working-directory: languages/react-native
        run: yarn install --frozen-lockfile
      - name: Build the library
        working-directory: languages/react-native
        run: "yarn ubrn:release-build"
      - name: Sign xcframework
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.IOS_KEYCHAIN_PASSWORD }}
        working-directory: languages/react-native
        run: |
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $RUNNER_TEMP/signing.keychain-db
          codesign --timestamp -s "Apple Development" ./build/RusaintReactNativeFramework.xcframework
      - name: Publish to npm
        working-directory: languages/react-native
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public --scope @rusaint --provenance
